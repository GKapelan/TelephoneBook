import org.w3c.dom.ls.LSOutput;

import java.lang.reflect.Array;
import java.util.Arrays;
import java.util.Dictionary;
import java.util.HashMap;
import java.util.Map;

public class main {
    public static void main(String[] args) {

        String line = "Рассказывают, что древние греки очень любили\n" +
                "виноград и после его сбора устраивали праздник в\n" +
                "честь бога винограда Диониса. Свиту Диониса составляли\n" +
                "козлоногие существа - сатиры. Изображая их, эллины\n" +
                "надевали козлиные шкуры, бешено скакали и пели -\n" +
                "словом, самозабвенно предавались веселью. Такие\n" +
                "представления назывались трагедиями, что\n" +
                "по-древнегречески означало «пение козлов».\n" +
                "Впоследствии эллины призадумались: чему бы еще\n" +
                "посвятить такие игрища?\n" +
                "\n" +
                "Простым людям всегда было интересно знать, как живут\n" +
                "богатые. Драматург Софокл начал писать пьесы про царей,\n" +
                "и сразу стало ясно: цари и те часто плачут и личная\n" +
                "жизнь у них небезопасна и отнюдь не проста. А для того\n" +
                "чтобы придать повествованию занимательности, Софокл\n" +
                "решил привлечь актеров, которые смогли бы сыграть его\n" +
                "произведения, - так появился театр.\n" +
                "\n" +
                "Вначале поклонники искусства были очень недовольны:\n" +
                "действие видели только те, кто сидел в первом ряду, и,\n" +
                "поскольку билеты тогда еще не были предусмотрены,\n" +
                "лучшие места занимали самые сильные и рослые. Тогда\n" +
                "эллины решили устранить это неравноправие и построили\n" +
                "амфитеатр, где каждый следующий ряд был выше предыдущего,\n" +
                "и всё, что происходило на сцене, стало видно всем\n" +
                "пришедшим на представление.\n" +
                "\n" +
                "В спектакле обычно участвовали не только актеры, но и хор,\n" +
                "вещавший от имени народа. Например, выходил герой на арену\n" +
                "и произносил:\n" +
                "\n" +
                "- Я сейчас пойду сделаю что-нибудь плохое!\n" +
                "\n" +
                "- Совершать плохое бессовестно! - завывал хор.\n" +
                "\n" +
                "- Ладно, - поразмыслив, нехотя соглашался герой. - Тогда\n" +
                "я пойду и сделаю что-нибудь хорошее.\n" +
                "\n" +
                "- Хорошее делать хорошо, - одобрял его хор, тем самым\n" +
                "как бы нечаянно подталкивая героя к гибели: ведь, как\n" +
                "положено в трагедии, за хорошие дела неизбежно наступает\n" +
                "расплата.\n" +
                "\n" +
                "Правда, иногда появлялся «бог из машины» (машиной называли\n" +
                "специальный кран, на котором «бога» опускали на сцену) и\n" +
                "нежданно-негаданно спасал героя. Был ли это действительно\n" +
                "настоящий бог или всё-таки актер - неясно до сих пор, но\n" +
                "зато доподлинно известно, что и слово «машина», и\n" +
                "театральные краны были придуманы в Древней Греции.\n";

        String[] text = null;

        line = line.replaceAll("[\\pP]", " ");
        line = line.replaceAll("\\s+", " ");
        text = line.split(" ");

        Map<String, Integer> txt = new HashMap<String, Integer>();

        for (String s: text
             ) {

            if (txt.containsKey(s.toLowerCase())) {
                txt.put(s.toLowerCase(), txt.get(s.toLowerCase()) + 1);
            }
            else {
                txt.put(s.toLowerCase(),1);
            }
        }

        System.out.print("Количество слова в тексте");
        for (Map.Entry<String, Integer> key: txt.entrySet()
             ) {
            System.out.printf("\n%s = %d ", key.getKey(), key.getValue());
        }
    }
}
